{% include 'header' %}

#import <XCTest/XCTest.h>
#import <OCMock/OCMock.h>

#import "{{ prefix }}{{ module_info.name }}ViewController.h"

#import "{{ prefix }}{{ module_info.name }}ViewOutput.h"

@interface {{ prefix }}{{ module_info.name }}ViewControllerTests : XCTestCase

@property (nonatomic, strong) {{ prefix }}{{ module_info.name }}ViewController *controller;

@property (nonatomic, strong) id mockOutput;

@end

@implementation {{ prefix }}{{ module_info.name }}ViewControllerTests

#pragma mark - Настройка окружения для тестирования

- (void)setUp {
    [super setUp];

    self.controller = [[{{ prefix }}{{ module_info.name }}ViewController alloc] init];

    self.mockOutput = OCMProtocolMock(@protocol({{ prefix }}{{ module_info.name }}ViewOutput));

    self.controller.output = self.mockOutput;
}

- (void)tearDown {
    self.controller = nil;

    self.mockOutput = nil;

    [super tearDown];
}

#pragma mark - Тестирование жизненного цикла

- (void)testThatControllerNotifiesPresenterOnDidLoad {
	// given

	// when
	[self.controller viewDidLoad];

	// then
	OCMVerify([self.mockOutput didTriggerViewReadyEvent]);
}

#pragma mark - Тестирование методов интерфейса

#pragma mark - Тестирование методов {{ prefix }}{{ module_info.name }}ViewInput

@end
